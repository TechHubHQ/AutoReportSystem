version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:13-alpine
    container_name: autoreportsystem_db
    environment:
      POSTGRES_DB: autoreportsystem
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - autoreportsystem_network

  # AutoReportSystem Application
  app:
    build:
      context: .
      dockerfile: infra/Dockerfile
    container_name: autoreportsystem_app
    environment:
      - DB_URL=postgresql+asyncpg://postgres:${POSTGRES_PASSWORD:-password}@db:5432/autoreportsystem
      - SMTP_ENV_KEY=${SMTP_ENV_KEY:-default_key}
      - DEBUG=${DEBUG:-False}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    ports:
      - "8501:8501"
    volumes:
      - ./logs:/home/app/app/logs
      - ./data:/home/app/app/data
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - autoreportsystem_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: autoreportsystem_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infra/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infra/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - autoreportsystem_network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local

networks:
  autoreportsystem_network:
    driver: bridge