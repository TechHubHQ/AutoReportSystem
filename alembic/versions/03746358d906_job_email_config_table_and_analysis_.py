"""job email config table and analysis content nullable change

Revision ID: 03746358d906
Revises: add_timeline_content
Create Date: 2025-08-22 23:36:35.494890

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '03746358d906'
down_revision: Union[str, Sequence[str], None] = 'add_timeline_content'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Change analysis_content to nullable
    op.alter_column('task_notes', 'analysis_content',
               existing_type=sa.TEXT(),
               nullable=True)
               
    # Drop the index if it exists
    try:
        op.drop_index(op.f('idx_tasks_is_archived'), table_name='tasks')
    except Exception:
        # Index might not exist, ignore the error
        pass
        
    # Create the job_email_configs table if it doesn't exist
    from sqlalchemy import inspect
    
    # Get the current connection
    connection = op.get_bind()
    inspector = inspect(connection)
    
    # Check if table exists
    if 'job_email_configs' not in inspector.get_table_names():
        op.create_table('job_email_configs',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('job_id', sa.String(), nullable=False),
            sa.Column('user_id', sa.Integer(), nullable=False),
            sa.Column('enabled', sa.Boolean(), nullable=False),
            sa.Column('recipient', sa.String(), nullable=False),
            sa.Column('subject', sa.String(), nullable=False),
            sa.Column('template', sa.String(), nullable=True),
            sa.Column('recipient_name', sa.String(), nullable=True),
            sa.Column('send_empty_reports', sa.Boolean(), nullable=False),
            sa.Column('html_format', sa.Boolean(), nullable=False),
            sa.Column('retry_failed_sends', sa.Boolean(), nullable=False),
            sa.Column('max_retries', sa.Integer(), nullable=False),
            sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
            sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
            sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
            sa.PrimaryKeyConstraint('id'),
            sa.UniqueConstraint('job_id', 'user_id', name='unique_job_user_email_config')
        )
        op.create_index(op.f('ix_job_email_configs_id'), 'job_email_configs', ['id'], unique=False)
        op.create_index(op.f('ix_job_email_configs_job_id'), 'job_email_configs', ['job_id'], unique=False)
    else:
        # Table already exists, just ensure indexes exist
        try:
            op.create_index(op.f('ix_job_email_configs_id'), 'job_email_configs', ['id'], unique=False)
        except Exception:
            pass  # Index might already exist
        try:
            op.create_index(op.f('ix_job_email_configs_job_id'), 'job_email_configs', ['job_id'], unique=False)
        except Exception:
            pass  # Index might already exist
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop the job_email_configs table if it exists
    from sqlalchemy import inspect
    
    # Get the current connection
    connection = op.get_bind()
    inspector = inspect(connection)
    
    # Check if table exists before trying to drop it
    if 'job_email_configs' in inspector.get_table_names():
        try:
            op.drop_index(op.f('ix_job_email_configs_job_id'), table_name='job_email_configs')
        except Exception:
            pass  # Index might not exist
        try:
            op.drop_index(op.f('ix_job_email_configs_id'), table_name='job_email_configs')
        except Exception:
            pass  # Index might not exist
        op.drop_table('job_email_configs')
    
    # Recreate the index
    try:
        op.create_index(op.f('idx_tasks_is_archived'), 'tasks', ['is_archived'], unique=False)
    except Exception:
        pass  # Index might already exist
    
    # Change analysis_content back to not nullable
    op.alter_column('task_notes', 'analysis_content',
               existing_type=sa.TEXT(),
               nullable=False)
    
    # ### end Alembic commands ###
